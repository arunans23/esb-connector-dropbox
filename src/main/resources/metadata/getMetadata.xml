<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://www.dropbox.com/developers/core/docs#metadata -->
<template name="getMetadata" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fileLimit"
               description="Maximum limitation of files that can be retrieve. Default is 10,000 (max is 25,000)."/>
    <parameter name="hash"
               description="Each call to /metadata on a folder will return a hash field, generated by hashing all of the metadata contained in that response."/>
    <parameter name="list" description="The strings true and false are valid values."/>
    <parameter name="includeDeleted" description="Only applicable when list is set."/>
    <parameter name="rev"
               description="If you include a particular revision number, then only the metadata for that revision will be returned."/>
    <parameter name="locale"
               description="The metadata returned will have its size field translated based on the given locale."/>
    <parameter name="includeMediaInfo" description="If true will return media info"/>
    <sequence class="sequence">
        <property name="uri.var.fileLimit" expression="$func:fileLimit"/>
        <property name="uri.var.hash" expression="$func:hash"/>
        <property name="uri.var.list" expression="$func:list"/>
        <property name="uri.var.includeDeleted" expression="$func:includeDeleted"/>
        <property name="uri.var.rev" expression="$func:rev"/>
        <property name="uri.var.locale" expression="$func:locale"/>
        <property name="uri.var.includeMediaInfo" expression="$func:includeMediaInfo"/>
        <script language="js">
            <![CDATA[
				var fileLimit = mc.getProperty('uri.var.fileLimit'); 
				var locale = mc.getProperty('uri.var.locale');
				var rev = mc.getProperty('uri.var.rev');
				var hash = mc.getProperty('uri.var.hash');
				var list = mc.getProperty('uri.var.list');
				var includeDeleted = mc.getProperty('uri.var.includeDeleted');
				var includeMediaInfo = mc.getProperty('uri.var.includeMediaInfo');
				var urlQuery = '';
				if(fileLimit != null && fileLimit != "") {
					urlQuery += 'file_limit=' + fileLimit + '&';
				}
				if(locale != null && locale != "") {
					urlQuery += 'locale=' + locale + '&';
				}
				if(rev != null && rev != "") {
					urlQuery += 'rev=' + rev + '&';
				}
				if(hash != null && hash != "") {
					urlQuery += 'hash=' + hash + '&';
				}
				if(list != null && list != "") {
					urlQuery += 'list=' + list + '&';
				}
				if(includeDeleted != null && includeDeleted != "") {
					urlQuery += 'include_deleted=' + includeDeleted + '&';
				}
				if(includeMediaInfo != null && includeMediaInfo != "") {
					urlQuery += 'include_media_info=' + includeMediaInfo + '&';
				}
				// Add a leading '?' and remove the trailing '&'
				if (urlQuery != '') {
					urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
					mc.setProperty('uri.var.urlQuery', encodeURI(urlQuery));
				}
			]]>
        </script>
        <property action="remove" name="Accept-Encoding" scope="transport"/>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/metadata{+uri.var.root}{+uri.var.path}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="x-dropbox-request-id" scope="transport" action="remove"/>
        <header name="x-server-response-time" scope="transport" action="remove"/>
        <header name="x-dropbox-http-protocol" scope="transport" action="remove"/>
        <header name="X-RequestId" scope="transport" action="remove"/>
        <header name="set-cookie" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="cache-control" scope="transport" action="remove"/>
        <header name="pragma" scope="transport" action="remove"/>
    </sequence>
</template>