<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://www.dropbox.com/developers/core/docs#fileops-move -->
<template name="move" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fromPath"
               description="The from_path is required Specifies the file or folder to be moved from relative to root."/>
    <parameter name="toPath"
               description="The to_path is required Specifies the destination path, including the new name for the file or folder, relative to root."/>
    <parameter name="locale"
               description="The locale is the metadata returned will have its size field translated based on the given locale. "/>
    <sequence>
        <property name="uri.var.fromPath" expression="$func:fromPath"/>
        <property name="uri.var.toPath" expression="$func:toPath"/>
        <property name="uri.var.locale" expression="$func:locale"/>
        <property name="uri.var.urlQuery" value=""/>
        <script language="js">
            <![CDATA[
        	//encoding url param variables 
            var fromPath = mc.getProperty("uri.var.fromPath");
            var toPath = mc.getProperty("uri.var.toPath"); 
            var locale = mc.getProperty("uri.var.locale");
            var root = mc.getProperty("uri.var.root"); 
            var urlQuery = "";
            // query is a mandatory parameter                                                                                                                                                         
            if (fromPath!=null && fromPath!= ""){
               urlQuery+='from_path='+ fromPath +'&';
            }
            if (toPath!=null && toPath!= ""){
               urlQuery+='to_path='+ toPath +'&';
            }
            if (root!=null && root!= ""){
               urlQuery+='root='+ root.substring(1) +'&';
            }    
	        //encoding optional url param variables 			
            if (locale!=null && locale!= ""){
               urlQuery+='locale='+ locale +'&';
            }
            if(urlQuery.length!=1){
		       urlQuery='?'+urlQuery.toString().substring(0,urlQuery.toString().lastIndexOf("&"))
		       mc.setProperty('uri.var.urlQuery', urlQuery);                               
            }              	                                                                                                                                                                                            
         ]]>
        </script>
        <property action="remove" name="Accept-Encoding" scope="transport"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{+uri.var.apiUrl}/fileops/move{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-server-response-time" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="x-dropbox-http-protocol" scope="transport" action="remove"/>
        <header name="x-dropbox-request-id" scope="transport" action="remove"/>
        <header name="X-RequestId" scope="transport" action="remove"/>
        <header name="set-cookie" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="cache-control" scope="transport" action="remove"/>
        <header name="pragma" scope="transport" action="remove"/>
    </sequence>
</template>